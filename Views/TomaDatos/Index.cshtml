@{
    ViewData["Title"] = "Index";
}
<style>
    .custom-ok-button {
        background-color: #4CAF50; 
        color: white;
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
    }

    .custom-ok-button-error{
        background-color: red; 
        color: white;
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
    }

    .custom-ok-button-warning {
        background-color: black;
        color: white;
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
    }

    .is-invalid {
        border: 2px solid red;
        background-color: #ffe6e6;
    }

</style>
<h2 class="text-center">ENCUESTA DE MOVILIDAD SOSTENIBLE - YAMAHA</h2>
<div class="card">
  <div class="card-body">

            <div class="container">
            <!-- Tabs navs -->
            <ul class="nav nav-tabs mb-3" id="ex1" role="tablist">
                <li class="nav-item" role="presentation">
                    <a data-mdb-tab-init
                       class="nav-link active"
                       id="ex1-tab-1"
                       href="#ex1-tabs-1"
                       role="tab"
                       aria-controls="ex1-tabs-1"
                       aria-selected="true">Datos personales</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a data-mdb-tab-init
                       class="nav-link"
                       id="ex1-tab-2"
                       href="#ex1-tabs-2"
                       role="tab"
                       aria-controls="ex1-tabs-2"
                       aria-selected="false">Trayecto ida</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a data-mdb-tab-init
                       class="nav-link"
                       id="ex1-tab-3"
                       href="#ex1-tabs-3"
                       role="tab"
                       aria-controls="ex1-tabs-3"
                       aria-selected="false">Trayecto regreso</a>
                </li>
            </ul>
            <!-- Tabs content -->
            <div class="tab-content" id="ex1-content">
                <div class="tab-pane fade show active"
                     id="ex1-tabs-1"
                     role="tabpanel"
                     aria-labelledby="ex1-tab-1">
                    @await Html.PartialAsync("_DatosPersonales")
                </div>
                <div class="tab-pane fade" id="ex1-tabs-2" role="tabpanel" aria-labelledby="ex1-tab-2">
                    @await Html.PartialAsync("_TrayectoIda")
                </div>
                <div class="tab-pane fade" id="ex1-tabs-3" role="tabpanel" aria-labelledby="ex1-tab-3">
                    @await Html.PartialAsync("_TrayectoRegreso")
                </div>
            </div>
            <!-- Tabs content -->
        </div>

  </div>
</div>
@section scripts {
    <script src="~/scripts/googlemaps.js"></script>
@*     <script src="~/scripts/filterTrayects.js"></script> *@
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var today = new Date().toISOString().split('T')[0];
            var dateInput = document.getElementById('fecha');
            dateInput.value = today;
            dateInput.setAttribute('max', today);
        });

        document.getElementById('btnEnviarEncuesta').addEventListener('click', function (e) {
            e.preventDefault();

            const encuesta = obtenerDatosEncuesta();

            fetch('/Encuesta/GuardarEncuesta', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(encuesta)
            })
                .then(response => response.json())
                .then(data => {
                    // Limpiar clases de error previas
                    document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));

                    if (data.success) {
                        Swal.fire({
                            title: '¡Exitoso!',
                            text: data.message,
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '@Url.Action("Index", "Home")';
                            }
                        });
                    } else {
                        Swal.fire({
                            title: 'Advertencia!',
                            text: data.message,
                            icon: 'warning',
                            confirmButtonText: 'OK'
                        });

                        if (data.errores) {
                            Object.keys(data.errores).forEach(campo => {
                                const input = document.getElementById(campo);
                                if (input) {
                                    input.classList.add('is-invalid'); // Agregar clase para resaltar
                                }
                            });
                        }
                    }
                })
                .catch(error => {
                    Swal.fire({
                        title: 'Error',
                        text: 'Hubo un problema al enviar la encuesta.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                });
        });



        document.getElementById('btnContinuarIda').addEventListener('click', function () {
            activateTab('ex1-tab-2', 'ex1-tabs-2');
        });

        document.getElementById('btnContinuarRegreso').addEventListener('click', function () {
            activateTab('ex1-tab-3', 'ex1-tabs-3');
        });

        function activateTab(tabId, contentId) {
            const activeTab = document.querySelector('.nav-link.active');
            const activePane = document.querySelector('.tab-pane.show.active');

            if (activeTab) activeTab.classList.remove('active');
            if (activePane) activePane.classList.remove('show', 'active');

            document.getElementById(tabId).classList.add('active');
            document.getElementById(contentId).classList.add('show', 'active');
        }
    </script>
}
